{"version":3,"file":"static/js/69.479718af.chunk.js","mappings":"6LAkGA,UA7FoB,WAClB,IAAMA,GAAWC,EAAAA,EAAAA,MACjBC,GAAoCC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,MAAM,IAA7DC,EAAKJ,EAALI,MAAOC,EAASL,EAATK,UAAWC,EAAKN,EAALM,MAM1B,OAJAC,EAAAA,EAAAA,YAAU,WACRT,GAASU,EAAAA,EAAAA,KACX,GAAG,CAACV,IAEAO,GACKI,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACL,WAAW,IAGxBC,GACKK,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CAAK,UAAQN,MAIpBG,EAAAA,EAAAA,KAAA,OAAAG,SACGR,EAAMS,KAAI,SAAAC,GAAI,OACbL,EAAAA,EAAAA,KAAA,OAAAG,UACEH,EAAAA,EAAAA,KAAA,KACEM,KAAI,yBAAAC,OAA2BF,EAAKG,MACpCC,OAAO,SACPC,IAAI,sBAAqBP,SAExBE,EAAKG,QANAH,EAAKM,IAQT,KAId,C","sources":["pages/CatalogPage.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAll } from '../redux/advert/operations';\nimport Loader from 'components/Loader/Loader';\n\nconst CatalogPage = () => {\n  const dispatch = useDispatch();\n  const { items, isLoading, error } = useSelector(state => state.advert);\n\n  useEffect(() => {\n    dispatch(fetchAll());\n  }, [dispatch]);\n\n  if (isLoading) {\n    return <Loader isLoading={true} />;\n  }\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  return (\n    <div>\n      {items.map(item => (\n        <div key={item._id}>\n          <a\n            href={`http://ww38.item.name/${item.name}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {item.name}\n          </a>\n        </div>\n      ))}\n    </div>\n  );\n};\n\n/* import React, { useEffect, useState, memo } from 'react';\nimport Card from '../helpers/Card';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAll } from '../redux/advert/operations';\nimport {\n  selectAdvert,\n  selectLoader,\n  selectError,\n} from '../redux/advert/selectors';\nimport Loader from 'components/Loader/Loader';\nimport {\n  CardsContainer,\n  CardContainer,\n  LoadMore,\n} from 'components/AdvertForm/index';\n\nconst CatalogPage = () => {\n  const dispatch = useDispatch();\n  const adverts = useSelector(selectAdvert);\n  const isLoading = useSelector(selectLoader);\n  const error = useSelector(selectError);\n  const perPage = 4;\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    dispatch(fetchAll());\n  }, [dispatch]);\n\n  const handleLoadMore = () => {\n    setPage(page => page + 1);\n  };\n\n  const MemoizedCardContainer = memo(CardContainer);\n\n  const startIndex = (page - 1) * perPage;\n  const endIndex = startIndex + perPage;\n\n  const renderedCards =\n    adverts && Object.values(adverts).slice(startIndex, endIndex);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <b>Error: {error}</b>}\n      <CardsContainer>\n        {renderedCards &&\n          renderedCards.map(card => (\n            <MemoizedCardContainer key={card._id}>\n              <Card card={card} />\n            </MemoizedCardContainer>\n          ))}\n        {Object.values(adverts).length > endIndex && (\n          <LoadMore onClick={handleLoadMore}>Load more</LoadMore>\n        )}\n      </CardsContainer>\n    </>\n  );\n};\n */\n\nexport default CatalogPage;\n"],"names":["dispatch","useDispatch","_useSelector","useSelector","state","advert","items","isLoading","error","useEffect","fetchAll","_jsx","Loader","_jsxs","children","map","item","href","concat","name","target","rel","_id"],"sourceRoot":""}